05/02/2013
# These are my notes on how to create custom GATK walkers for use in quickly traversing BAM files

# The GATK walkers come in three flavors:
	1. RodWalkers
	2. ReadWalkers
	3. LocusWalkers
	
# I wanted to traverse all of the reads in a bam, and, if the read start position was the same, check to see if that readname had already been used
# If so, the read would be removed and not written to the outputbam

# I first added the appropriate JARs to a project in Netbeans: GATKRemoveIdenticalDupRead
# Next, I extended the ReadWalker class and removed the default "main" class from the project.
# Then I filled in only the "map" section and made the other methods return (since I wasn't reducing output)


# You need to put all identified jars on the classpath and then call the class name by its literal invocation
Blade14: /mnt/iscsi/vnx_gliu_7/100_base_run
$ ~/jdk1.7.0/bin/java -cp "/home/dbickhart/bin/GATKRemoveIdenticalDupRead.jar:../GenomeAnalysisToolkit/GenomeAnalysisTK.jar:/home/dbickhart/bin/lib/sam-1.83.jar" org.broadinstitute.sting.gatk.CommandLineGATK -T SearchReads -I BIBR02/BIBR02.rg.full.sorted.merged.bam -R ../reference/umd3_kary_unmask_ngap.fa -o BIBR02/BIBR02.rg.rd.full.sorted.merged.bam


# Now to test it using my forkCommands.pl script
$ perl ../bin/forkCommands.pl --lscmd 'BI*/BI*.rg.full.sorted.merged.bam' --del '/' --outname '%0/%0.rg.rd.full.sorted.merged.bam' --cmd '~/jdk1.7.0/bin/java -Xmx15g -cp "/home/dbickhart/bin/GATKRemoveIdenticalDupRead.jar:../GenomeAnalysisToolkit/GenomeAnalysisTK.jar:/home/dbickhart/bin/lib/sam-1.83.jar" org.broadinstitute.sting.gatk.CommandLineGATK -T SearchReads -I %i -R ../reference/umd3_kary_unmask_ngap.fa -o %o' --proc 5

# It worked well. A run using the taurus individuals found that several had really malformed reads which caused the GATK to stop in its tracks halfway through (and my script deleted the original bams!)
# I need to realign the reads from these problematic individuals and reformat everything
	Blade14: /mnt/iscsi/vnx_gliu_7/100_base_run
	$ cat ../100_bulls_alignment_run_conf.txt | grep BTHO25 | perl -lane 'my $an = "BTHO25"; my @base = split(/\//, $F[0]); my @num = split(/\_/, $base[-1]); my $ref = "../reference/umd3_kary_unmask_ngap.fa"; system "bwa aln $ref $F[0] > $an/$an\_rebwa_1_$num[4].sai"; system "bwa aln $ref $F[1] > $an/$an\_rebwa_2_$num[4].sai"; system "bwa sampe -r \"\@RG\\tID:$an.$num[4]\\tLB:$an\\tPL:ILLUMINA\\tSM:$an\" $ref $an/$an\_rebwa_1_$num[4].sai $an/$an\_rebwa_2_$num[4].sai $F[0] $F[1] > $an/$an\_rebwa_$num[4].sam"; system "samtools view -bS $an/$an\_rebwa_$num[4].sam -o $an/$an\_rebwa_$num[4].bam"; if( -s "$an/$an\_rebwa_$num[4].bam"){ system "rm $an/$an\_rebwa_$num[4].sam";} system "~/jdk1.7.0/bin/java -jar ~/picard-tools-1.85/CleanSam.jar I=$an/$an\_rebwa_$num[4].bam O=$an/$an\_rebwa_$num[4].cleaned.bam VALIDATION_STRINGENCY=LENIENT"; if( -s "$an/$an\_rebwa_$num[4].cleaned.bam" ){ system "rm $an/$an\_rebwa_$num[4].bam";}  system "~/jdk1.7.0/bin/java -jar ~/picard-tools-1.85/SortSam.jar I=$an/$an\_rebwa_$num[4].cleaned.bam O=$an/$an\_rebwa_$num[4].cleaned.sorted.bam TMP_DIR=/home/dbickhart/vnx_gliu_7/tmp SORT_ORDER=coordinate  VALIDATION_STRINGENCY=LENIENT CREATE_INDEX=true"; if( -s "$an/$an\_rebwa_$num[4].cleaned.sorted.bam"){ system "rm $an/$an\_rebwa_$num[4].cleaned.bam";} system "~/jdk1.7.0/bin/java -jar ~/picard-tools-1.85/MarkDuplicates.jar I=$an/$an\_rebwa_$num[4].cleaned.sorted.bam O=$an/$an\_rebwa_$num[4].cleaned.sorted.redup.bam METRICS_FILE=$an/$an\_metrics.txt CREATE_INDEX=true REMOVE_DUPLICATES=TRUE ASSUME_SORTED=TRUE VALIDATION_STRINGENCY=LENIENT TMP_DIR=/home/dbickhart/vnx_gliu_7/tmp"; if( -s "$an/$an\_rebwa_$num[4].cleaned.sorted.redup.bam" ){ system "rm $an/$an\_rebwa_$num[4].cleaned.sorted.bam";}'
	$ cat ../100_bulls_alignment_run_conf.txt | grep BTHO29 | perl -lane 'my $an = "BTHO29"; my @base = split(/\//, $F[0]); my @num = split(/\_/, $base[-1]); my $ref = "../reference/umd3_kary_unmask_ngap.fa"; system "bwa aln $ref $F[0] > $an/$an\_rebwa_1_$num[4].sai"; system "bwa aln $ref $F[1] > $an/$an\_rebwa_2_$num[4].sai"; system "bwa sampe -r \"\@RG\\tID:$an.$num[4]\\tLB:$an\\tPL:ILLUMINA\\tSM:$an\" $ref $an/$an\_rebwa_1_$num[4].sai $an/$an\_rebwa_2_$num[4].sai $F[0] $F[1] > $an/$an\_rebwa_$num[4].sam"; system "samtools view -bS $an/$an\_rebwa_$num[4].sam -o $an/$an\_rebwa_$num[4].bam"; if( -s "$an/$an\_rebwa_$num[4].bam"){ system "rm $an/$an\_rebwa_$num[4].sam";} system "~/jdk1.7.0/bin/java -jar ~/picard-tools-1.85/CleanSam.jar I=$an/$an\_rebwa_$num[4].bam O=$an/$an\_rebwa_$num[4].cleaned.bam VALIDATION_STRINGENCY=LENIENT"; if( -s "$an/$an\_rebwa_$num[4].cleaned.bam" ){ system "rm $an/$an\_rebwa_$num[4].bam";}  system "~/jdk1.7.0/bin/java -jar ~/picard-tools-1.85/SortSam.jar I=$an/$an\_rebwa_$num[4].cleaned.bam O=$an/$an\_rebwa_$num[4].cleaned.sorted.bam TMP_DIR=/home/dbickhart/vnx_gliu_7/tmp SORT_ORDER=coordinate  VALIDATION_STRINGENCY=LENIENT CREATE_INDEX=true"; if( -s "$an/$an\_rebwa_$num[4].cleaned.sorted.bam"){ system "rm $an/$an\_rebwa_$num[4].cleaned.bam";} system "~/jdk1.7.0/bin/java -jar ~/picard-tools-1.85/MarkDuplicates.jar I=$an/$an\_rebwa_$num[4].cleaned.sorted.bam O=$an/$an\_rebwa_$num[4].cleaned.sorted.redup.bam METRICS_FILE=$an/$an\_metrics.txt CREATE_INDEX=true REMOVE_DUPLICATES=TRUE ASSUME_SORTED=TRUE VALIDATION_STRINGENCY=LENIENT TMP_DIR=/home/dbickhart/vnx_gliu_7/tmp"; if( -s "$an/$an\_rebwa_$num[4].cleaned.sorted.redup.bam" ){ system "rm $an/$an\_rebwa_$num[4].cleaned.sorted.bam";}'
	$ cat ../100_bulls_alignment_run_conf.txt | grep BTHO32 | perl -lane 'my $an = "BTHO32"; my @base = split(/\//, $F[0]); my @num = split(/\_/, $base[-1]); my $ref = "../reference/umd3_kary_unmask_ngap.fa"; system "bwa aln $ref $F[0] > $an/$an\_rebwa_1_$num[4].sai"; system "bwa aln $ref $F[1] > $an/$an\_rebwa_2_$num[4].sai"; system "bwa sampe -r \"\@RG\\tID:$an.$num[4]\\tLB:$an\\tPL:ILLUMINA\\tSM:$an\" $ref $an/$an\_rebwa_1_$num[4].sai $an/$an\_rebwa_2_$num[4].sai $F[0] $F[1] > $an/$an\_rebwa_$num[4].sam"; system "samtools view -bS $an/$an\_rebwa_$num[4].sam -o $an/$an\_rebwa_$num[4].bam"; if( -s "$an/$an\_rebwa_$num[4].bam"){ system "rm $an/$an\_rebwa_$num[4].sam";} system "~/jdk1.7.0/bin/java -jar ~/picard-tools-1.85/CleanSam.jar I=$an/$an\_rebwa_$num[4].bam O=$an/$an\_rebwa_$num[4].cleaned.bam VALIDATION_STRINGENCY=LENIENT"; if( -s "$an/$an\_rebwa_$num[4].cleaned.bam" ){ system "rm $an/$an\_rebwa_$num[4].bam";}  system "~/jdk1.7.0/bin/java -jar ~/picard-tools-1.85/SortSam.jar I=$an/$an\_rebwa_$num[4].cleaned.bam O=$an/$an\_rebwa_$num[4].cleaned.sorted.bam TMP_DIR=/home/dbickhart/vnx_gliu_7/tmp SORT_ORDER=coordinate  VALIDATION_STRINGENCY=LENIENT CREATE_INDEX=true"; if( -s "$an/$an\_rebwa_$num[4].cleaned.sorted.bam"){ system "rm $an/$an\_rebwa_$num[4].cleaned.bam";} system "~/jdk1.7.0/bin/java -jar ~/picard-tools-1.85/MarkDuplicates.jar I=$an/$an\_rebwa_$num[4].cleaned.sorted.bam O=$an/$an\_rebwa_$num[4].cleaned.sorted.redup.bam METRICS_FILE=$an/$an\_metrics.txt CREATE_INDEX=true REMOVE_DUPLICATES=TRUE ASSUME_SORTED=TRUE VALIDATION_STRINGENCY=LENIENT TMP_DIR=/home/dbickhart/vnx_gliu_7/tmp"; if( -s "$an/$an\_rebwa_$num[4].cleaned.sorted.redup.bam" ){ system "rm $an/$an\_rebwa_$num[4].cleaned.sorted.bam";}'
	$ cat ../100_bulls_alignment_run_conf.txt | grep BTJE09 | perl -lane 'my $an = "BTJE09"; my @base = split(/\//, $F[0]); my @num = split(/\_/, $base[-1]); my $ref = "../reference/umd3_kary_unmask_ngap.fa"; system "bwa aln $ref $F[0] > $an/$an\_rebwa_1_$num[4].sai"; system "bwa aln $ref $F[1] > $an/$an\_rebwa_2_$num[4].sai"; system "bwa sampe -r \"\@RG\\tID:$an.$num[4]\\tLB:$an\\tPL:ILLUMINA\\tSM:$an\" $ref $an/$an\_rebwa_1_$num[4].sai $an/$an\_rebwa_2_$num[4].sai $F[0] $F[1] > $an/$an\_rebwa_$num[4].sam"; system "samtools view -bS $an/$an\_rebwa_$num[4].sam -o $an/$an\_rebwa_$num[4].bam"; if( -s "$an/$an\_rebwa_$num[4].bam"){ system "rm $an/$an\_rebwa_$num[4].sam";} system "~/jdk1.7.0/bin/java -jar ~/picard-tools-1.85/CleanSam.jar I=$an/$an\_rebwa_$num[4].bam O=$an/$an\_rebwa_$num[4].cleaned.bam VALIDATION_STRINGENCY=LENIENT"; if( -s "$an/$an\_rebwa_$num[4].cleaned.bam" ){ system "rm $an/$an\_rebwa_$num[4].bam";}  system "~/jdk1.7.0/bin/java -jar ~/picard-tools-1.85/SortSam.jar I=$an/$an\_rebwa_$num[4].cleaned.bam O=$an/$an\_rebwa_$num[4].cleaned.sorted.bam TMP_DIR=/home/dbickhart/vnx_gliu_7/tmp SORT_ORDER=coordinate  VALIDATION_STRINGENCY=LENIENT CREATE_INDEX=true"; if( -s "$an/$an\_rebwa_$num[4].cleaned.sorted.bam"){ system "rm $an/$an\_rebwa_$num[4].cleaned.bam";} system "~/jdk1.7.0/bin/java -jar ~/picard-tools-1.85/MarkDuplicates.jar I=$an/$an\_rebwa_$num[4].cleaned.sorted.bam O=$an/$an\_rebwa_$num[4].cleaned.sorted.redup.bam METRICS_FILE=$an/$an\_metrics.txt CREATE_INDEX=true REMOVE_DUPLICATES=TRUE ASSUME_SORTED=TRUE VALIDATION_STRINGENCY=LENIENT TMP_DIR=/home/dbickhart/vnx_gliu_7/tmp"; if( -s "$an/$an\_rebwa_$num[4].cleaned.sorted.redup.bam" ){ system "rm $an/$an\_rebwa_$num[4].cleaned.sorted.bam";}'
	
	
	# Now to merge them all
	$ perl ~/bin/merge_bams_sort_index.pl -l 20 -i BTRO05_rebwa -b ~/bin -o BTRO05_rebwa_merged_cleaned_sorted.bam -f 1 -p 10
	$ perl ~/bin/merge_bams_sort_index.pl -l 25 -i BTHO29_rebwa -b ~/bin -o BTHO29_rebwa_merged_cleaned_sorted.bam -f 1 -p 10
	$ perl ~/bin/merge_bams_sort_index.pl -l 25 -i BTJE09_rebwa -b ~/bin -o BTJE09_rebwa_merged_cleaned_sorted.bam -f 1 -p 10
	$ perl ~/bin/merge_bams_sort_index.pl -l 26 -i BTHO32_rebwa -b ~/bin -o BTHO32_rebwa_merged_cleaned_sorted.bam -f 1 -p 10
	$ perl ~/bin/merge_bams_sort_index.pl -l 26 -i BTHO25_rebwa -b ~/bin -o BTHO25_rebwa_merged_cleaned_sorted.bam -f 1 -p 10
	
	# DAMN! Samtools merger got rid of all the read groups! 
	# I'm going to have to regenerate them with picard tools
	Blade14:/100_base_run/BTHO25
	$ ~/jdk1.7.0/bin/java -jar ~/picard-tools-1.85/AddOrReplaceReadGroups.jar I=BTHO25.rg.rd.full.sorted.merged.bam O=BTHO25.tmp.bam RGID=BTHO25.001 RGLB=BTHO25 RGPL=illumina RGPU=HiSeq RGSM=BTHO25 VALIDATION_STRINGENCY=SILENT
	$ ~/jdk1.7.0/bin/java -jar ~/picard-tools-1.85/AddOrReplaceReadGroups.jar I=BTHO32.rg.rd.full.sorted.merged.bam O=BTHO32.tmp.bam RGID=BTHO32.001 RGLB=BTHO32 RGPL=illumina RGPU=HiSeq RGSM=BTHO32 VALIDATION_STRINGENCY=SILENT
	$ ~/jdk1.7.0/bin/java -jar ~/picard-tools-1.85/AddOrReplaceReadGroups.jar I=BTHO29.rg.rd.full.sorted.merged.bam O=BTHO29.tmp.bam RGID=BTHO29.001 RGLB=BTHO29 RGPL=illumina RGPU=HiSeq RGSM=BTHO29 VALIDATION_STRINGENCY=SILENT
	$ ~/jdk1.7.0/bin/java -jar ~/picard-tools-1.85/AddOrReplaceReadGroups.jar I=BTJE09.rg.rd.full.sorted.merged.bam O=BTJE09.tmp.bam RGID=BTJE09.001 RGLB=BTHJE09 RGPL=illumina RGPU=HiSeq RGSM=BTJE09 VALIDATION_STRINGENCY=SILENT
	$ ~/jdk1.7.0/bin/java -jar ~/picard-tools-1.85/AddOrReplaceReadGroups.jar I=BTRO05.rg.rd.full.sorted.merged.bam O=BTRO05.tmp.bam RGID=BTRO05.001 RGLB=BTRO05 RGPL=illumina RGPU=HiSeq RGSM=BTRO05 VALIDATION_STRINGENCY=SILENT
	