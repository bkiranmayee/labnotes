2010_11_09 - 2010_11_10
# Test run for CNV-seq and integrating Loess smoothing into the pipeline
# My goals are to test Bowtie against mrsFAST and BWA as the initial alignment programs
# Bowtie has the advantage of being as fast as BWA, and can report the best "strata" of hits for any read
# Bowtie is also nearly as accurate as BWA at only 2 mismatches for 36bp reads

# I need to reindex the cow4 genome for bowtie
	# I had previously used the following fasta for the bowtie index:
		$ ./bowtie-build /mnt/data110/gliu/cow4.fa /mnt/gliu1_usb/dbickhart/bowtie-0.12.7/indexes/cow4_index
	# that cow4.fa file is unmasked; I need to use a new, masked version.
	# this might take a while
		$ ./bowtie-build /mnt/gliu1_usb/blackstar/NGS/cow4_ucsc/bosTau4_noUn.masked /mnt/gliu1_usb/dbickhart/bowtie-0.12.7/indexes/cow4_index
	
# OK, so I rewrote create_hits_cnv-seq.pl to use bowtie by default (BWA is called using --BWA)

# Now I just need to run through the program to ensure that it calls the right files on server three
# I will try to use only three or four processors

# Now to test the parameters on the Bowtie input that I wrote into the program.
	$ /mnt/gliu1_usb/dbickhart/bowtie-0.12.7/bowtie -S --mm --best --strata -k 500 -n 2 cow4_index 081211_1_1.fastq 081211_1_1.sam
		segmentation fault
	
	# Ok, let's try that again
	$ /mnt/gliu1_usb/dbickhart/bowtie-0.12.7/bowtie -S --mm --best --strata -n 2 cow4_index 081211_1_1.fastq 081211_1_1.sam
		--strata has no effect unless combined with -k, -m or -a
		Command: /mnt/gliu1_usb/dbickhart/bowtie-0.12.7/bowtie -S --mm --best --strata -n 2 cow4_index 081211_1_1.fastq 081211_1_1.sam
	
	# So it requires "-k" or "-a" but gives a segmentation fault with -k 500
	$ /mnt/gliu1_usb/dbickhart/bowtie-0.12.7/bowtie -S --best --strata -a  -n 2 cow4_index 081211_1_1.fastq
		# produced output
		# so the --mm option caused the segmentation fault
	
	$ /mnt/gliu1_usb/dbickhart/bowtie-0.12.7/bowtie -S --best --strata -a -n 2 cow4_index 081211_1_1.fastq 081211_1_1.sam
		# Now to test the average number of alignments per read...
		$ perl -e '%a = (); @b = (); while(<>){@b = split(/\t/, $_); if($b[2] =~ /\*/){next;}else{ $a{$b[0]} += 1;}}foreach $key(keys(%a)){$num += $a{$key}; $f += 1;}print"$num\t$f\n";' < 081211_1_1.sam
			1350019 454125
			# so an average of ~3 hits per read
			# I like those odds!
			
# running!
	$ perl create_hits_cnvseq.pl --thread 3 --in blackstar_files.txt --out_dir /mnt/gliu1_usb/dbickhart/blackstar/bowtie
	# NOTE: this is running on fastq files that have been heavily cropped for poor quality reads (generated earlier this week) in the older blackstar folder
	# Testing the number of reads and average number of hits:
		$ ../../../samtools-0.1.8/samtools view old_blackstar_filtered_merged.bam | perl -e '%a = (); @b = (); while(<>){@b = split(/\t/, $_); if($b[2] =~ /\*/){next;}else{ $a{$b[0]} += 1;}}foreach $key(keys(%a)){$num += $a{$key}; $f += 1;}print"$num\t$f\n";'
			87072771        33587055
			
______________________________________
Comparison of Mrsfast to Bowtie
______________________________________

# My goal is to compare the hits files generated by mrsfast and bowtie

# Both were generated using the cropped FASTQ files (reads better than 18 average phred score)
	$ wc old_blackstar_filtered_merged.hits
		87072771  174145542 1239929040 old_blackstar_filtered_merged.hits
	$ perl -e '%hash; @seg; while(<>){@seg = split(/\t/, $_); $hash{$seg[0]} += 1;} foreach $hkey (sort {$a cmp $b} keys(%hash)){print "$hkey\t$hash{$hkey}\n";}' < old_blackstar_filtered_merged.hits
		
		
	$ wc old_blackstar_filtered_mrsfast.hits
 		176583790  353167580 2525264658 old_blackstar_filtered_mrsfast.hits	
	$ perl -e '%hash; @seg; while(<>){@seg = split(/\t/, $_); $hash{$seg[0]} += 1;} foreach $hkey (sort {$a cmp $b} keys(%hash)){print "$hkey\t$hash{$hkey}\n";}' < old_blackstar_filtered_mrsfast.hits
	
	$ wc merged.hits
		165785253  331570506 2370511636 merged.hits
	$ perl -e '%hash; @seg; while(<>){@seg = split(/\t/, $_); $hash{$seg[0]} += 1;} foreach $hkey (sort {$a cmp $b} keys(%hash)){print "$hkey\t$hash{$hkey}\n";}' < merged.hits
		
		bowtie		mrsfast		mrsfast/bowtie
		chr1	4190439	chr1	9926589	2.368866126
		chr10	2470546	chr10	5499038	2.225839146
		chr11	2724809	chr11	5544742	2.034910337
		chr12	2034637	chr12	4795703	2.357031254
		chr13	2046041	chr13	4157027	2.031741788
		chr14	2178638	chr14	5131781	2.355499629
		chr15	2062857	chr15	4879448	2.365383543
		chr16	2454436	chr16	4695923	1.913239131
		chr17	1739252	chr17	4127857	2.373351878
		chr18	1790019	chr18	4092986	2.286560087
		chr19	1800426	chr19	3542138	1.967388829
		chr2	3146632	chr2	7629922	2.424790061
		chr20	1772299	chr20	4060482	2.29108181
		chr21	1684936	chr21	3481761	2.06640549
		chr22	1537766	chr22	3132295	2.036912638
		chr23	1255490	chr23	2695217	2.146745096
		chr24	1395201	chr24	3184147	2.282213817
		chr25	1476925	chr25	2779761	1.882127393
		chr26	2259004	chr26	5204288	2.303797603
		chr27	1373206	chr27	2901777	2.113140345
		chr28	1468976	chr28	3076542	2.094344632
		chr29	1469895	chr29	3149429	2.142621752
		chr3	3190908	chr3	7179274	2.249915698
		chr4	2938858	chr4	6862885	2.335221709
		chr5	3070580	chr5	7367285	2.39931381
		chr6	12728981	chr6	19544379	1.535423692
		chr7	13211093	chr7	19217931	1.45468138
		chr8	3051690	chr8	7110099	2.329889012
		chr9	2665608	chr9	6288366	2.359073802
		chrX	1882623	chrX	5324718	2.828350658
		
	# So the mrsfast alignment program produced 2x the reads of Bowtie; but these were different alignment strategies. I will attept to run bowtie set to -a (all)
	# Emac'ed create_hits_cnv-seq.pl in George's blackstar NGS folder to remove the --best and --strata options in the bowtie subroutine
	$ perl create_hits_cnvseq.pl --thread 3 --in blackstar_files.txt --out_dir /mnt/gliu1_usb/dbickhart/blackstar/bowtie/old_blackstar_all
	

		
______________________________________
GC content script
______________________________________
# My perl script has been running for about 3 days so far, and one of my mistakes was to not incorporate a "feedback" state in the processing
# I will probably terminate the program, revise it to incorporate a Seq::IO function and force it to write to file after every chromosome is completed

# I am running into some issues with the data recovery stage of the GC_content_bioperl_reads script.
# I might just want to convert the output of each thread into an array and then print the array in format (the hashes are getting too messy)

# Or maybe just make the process use only a singular processor? Bioperl seems fast enough

# The single content approach works, and works relatively quickly. 
# I am able to easily generate decent coordinate files, but I need to work on the hit file comparison with the coordinates.